unit uMercuryPOP3EventHandler;

interface
uses MPEvent, MSEvent, daemon;

function startup(m: PM_INTERFACE; var flags: UINT_32; name: PAnsiChar;
  param: PAnsiChar): Smallint; cdecl; export;

{$IF DEFINED(CLOSEDOWN)}
function closedown(m: PM_INTERFACE; code: UINT_32; name: PAnsiChar;
  param: PAnsiChar): Smallint; cdecl; export;
{$ENDIF}

implementation
uses System.SysUtils;

var
  ModuleName: string;
  mi: M_INTERFACE;
  
function POP3EventHandler(module: UINT_32; event: UINT_32;
  edata: Pointer; cdata: Pointer): INT_32; cdecl;
var
  pms: PMPEVENTBUF;
  IPAddress, Text,
  LDateTime: AnsiString;
begin
  pms := PMPEVENTBUF(edata);
  IPAddress := string(AnsiString(pms.client));
  LDateTime := FormatDateTime('d mmm h:nn:ss am/pm', Now);
  Text := Format('%s - POP3 Event Handler called.', [LDateTime]);
  mi.logstring(19400, LOG_NORMAL, PAnsiChar(AnsiString(Text)));
  Result := 1; // Non-zero to indicate success!
end;

function startup(m: PM_INTERFACE; var flags: UINT_32; name: PAnsiChar;
  param: PAnsiChar): Smallint; cdecl; export;
var
  Text: string;
begin
  ModuleName := string(name);
  if m.register_event_handler(MMI_MERCURYP, MSEVT_CONNECT, @POP3EventHandler, nil)=0 then
    Text := 'Failed to register event handler' else
    Text := 'Successfully registered POP3 event handler';
  m.logstring(19400, LOG_SIGNIFICANT, PAnsiChar(AnsiString(Text)));
  mi := m^;
  Result := 1; // Non-zero to indicate success!
end;

{$IF DEFINED(CLOSEDOWN)}
function closedown(m: PM_INTERFACE; code: UINT_32; name: PAnsiChar;
  param: PAnsiChar): Smallint; cdecl; export;
begin

end;
{$ENDIF}

end.
